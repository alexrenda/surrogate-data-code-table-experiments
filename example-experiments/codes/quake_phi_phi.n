fun(t, disptminus, dispt, disptplus, M, C, V, M23, C23, V23) {
  // https://github.com/somayjain/quake-openmp/blob/master/quake.c#L550-L560

  // seemingly this program does not benefit from splitting, because the Lipschitz constant of the second half is so high

  t0 = 0.6;
  dt = 0.0024;

  disptminus = disptminus * dt * dt;
  dispt = dispt * dt * dt;

  if (t > 0.5) {
    t = t * 1.2;

    phi0 = 1;
    phi1 = 0;
    phi2 = 0;
  } else {
    t = t * 0.6;

    phi0 = 0.5 / pi * (0.0 + t / t0 - sin(0.0 + t / t0));
    phi1 = (1.0 - cos(0.0 + t / t0)) / t0;
    phi2 = 2.0 * pi / t0 / t0 * sin(0.0 + t / t0);
  }

  disptplus = disptplus * -dt * dt
            + 2.0 * M * dispt
            - (M - dt / 2 * C) * disptminus
            - dt * dt * (M23 * phi2 / 2
                         + C23 * phi1 / 2
                         + V23 * phi0 / 2);

  disptplus = disptplus / dt / dt;

 return disptplus;
}