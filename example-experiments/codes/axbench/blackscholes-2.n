// fun (rate, time, sptprice, strike, volatility, otype) {

//     rate = rate * 0.01;

//     xRiskFreeRate = rate;
//     xVolatility = volatility;
//     xTime = time;


//     xSqrtTime = sqrt{>=1}(xTime);

//     // logValues = log{>=1}( sptprice) - log{>=1} ( strike );
//     logValues = log{>=1}( sptprice * recip{>=1}(strike) );

//     xLogTerm = logValues;


//     xPowerTerm = xVolatility * xVolatility;
//     xPowerTerm = xPowerTerm * 0.5;

//     xD1 = xRiskFreeRate + xPowerTerm;
//     xD1 = xD1 * xTime;
//     xD1 = xD1 + xLogTerm;



//     xDen = xVolatility * xSqrtTime;
//     xD1 = xD1 * recip{>=1}(xDen);
//     xD2 = xD1 -  xDen;

//     d1 = xD1;
//     d2 = xD2;

//     // NofXd1 = CNDF( d1 );
//     // -----------
//     InputX = d1;
//     inv_sqrt_2xPI = 0.39894228040143270286;

//     if (InputX < 0.0) {
//         InputX = -InputX;
//         sign = 1;
//     } else {
//         sign = 0;
//     }

//     xInput = InputX;

//     // Compute NPrimeX term common to both four & six decimal accuracy calcs
//     expValues = exp(-0.5 * InputX * InputX);
//     xNPrimeofX = expValues;
//     xNPrimeofX = xNPrimeofX * inv_sqrt_2xPI;

//     xK2 = 0.2316419 * xInput;
//     xK2 = 1.0 + xK2;
//     xK2 = 1.0 *  recip{>=1}(xK2);
//     xK2_2 = xK2 * xK2;
//     xK2_3 = xK2_2 * xK2;
//     xK2_4 = xK2_3 * xK2;
//     xK2_5 = xK2_4 * xK2;

//     xLocal_1 = xK2 * 0.319381530;
//     xLocal_2 = xK2_2 * (-0.356563782);
//     xLocal_3 = xK2_3 * 1.781477937;
//     xLocal_2 = xLocal_2 + xLocal_3;
//     xLocal_3 = xK2_4 * (-1.821255978);
//     xLocal_2 = xLocal_2 + xLocal_3;
//     xLocal_3 = xK2_5 * 1.330274429;
//     xLocal_2 = xLocal_2 + xLocal_3;

//     xLocal_1 = xLocal_2 + xLocal_1;
//     xLocal   = xLocal_1 * xNPrimeofX;

//     xLocal   = 1.0 - xLocal;

//     OutputX  = xLocal;

//     if (sign > 0) {
//         OutputX = 1.0 - OutputX;
//     } else {
//         skip;
//     }

//     NofXd1 = OutputX;
//     // ----------

//     // NofXd2 = CNDF( d2 );
//     // ----------
//     InputX = d2;
//     inv_sqrt_2xPI = 0.39894228040143270286;

//     if (InputX < 0.0) {
//         InputX = -InputX;
//         sign = 1;
//     } else {
//         sign = 0;
//     }

//     xInput = InputX;

//     // Compute NPrimeX term common to both four & six decimal accuracy calcs
//     expValues = exp(-0.5 * InputX * InputX);
//     xNPrimeofX = expValues;
//     xNPrimeofX = xNPrimeofX * inv_sqrt_2xPI;

//     xK2 = 0.2316419 * xInput;
//     xK2 = 1.0 + xK2;
//     xK2 = 1.0 *  recip{>=1}(xK2);
//     xK2_2 = xK2 * xK2;
//     xK2_3 = xK2_2 * xK2;
//     xK2_4 = xK2_3 * xK2;
//     xK2_5 = xK2_4 * xK2;

//     xLocal_1 = xK2 * 0.319381530;
//     xLocal_2 = xK2_2 * (-0.356563782);
//     xLocal_3 = xK2_3 * 1.781477937;
//     xLocal_2 = xLocal_2 + xLocal_3;
//     xLocal_3 = xK2_4 * (-1.821255978);
//     xLocal_2 = xLocal_2 + xLocal_3;
//     xLocal_3 = xK2_5 * 1.330274429;
//     xLocal_2 = xLocal_2 + xLocal_3;

//     xLocal_1 = xLocal_2 + xLocal_1;
//     xLocal   = xLocal_1 * xNPrimeofX;

//     xLocal   = 1.0 - xLocal;

//     OutputX  = xLocal;

//     if (sign > 0) {
//         OutputX = 1.0 - OutputX;
//     } else {
//         skip;
//     }

//     NofXd2 = OutputX;
//     // ------------

//     N1 = NofXd1 ;
//     N2 = NofXd2 ;

//     FutureValueX = strike * ( exp( -(rate)*(time) ) );
//     if (otype > 0) {
//         OptionPrice = (sptprice * NofXd1) - (FutureValueX * NofXd2);
//     } else {
//         NegNofXd1 = (1.0 - NofXd1);
//         NegNofXd2 = (1.0 - NofXd2);
//         OptionPrice = (FutureValueX * NegNofXd2) - (sptprice * NegNofXd1);
//     }

fun (rate, time, sptprice, strike, otype, NofXd1, NofXd2) {
    FutureValueX = strike * ( exp( -(rate)*(time) ) );
    if (otype > 0) {
        OptionPrice = (sptprice * NofXd1) - (FutureValueX * NofXd2);
    } else {
        NegNofXd1 = (1.0 - NofXd1);
        NegNofXd2 = (1.0 - NofXd2);
        OptionPrice = (FutureValueX * NegNofXd2) - (sptprice * NegNofXd1);
    }


    return OptionPrice;
}