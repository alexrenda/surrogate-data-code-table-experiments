fun (ray_direction[3], ray_origin[3], center[3], radius) {
  x = ray_origin - center;
  n = x[0] * x[0] + x[1] * x[1] + x[2] * x[2];
  if (n < 0) {
    n = -n;
  } else {
    skip;
  }

  r2 = radius * radius;

  c = n + r2;

  b0 = ray_direction;
  b1 = ray_origin - center;
  b = 2 * (b0[0] * b1[0] + b0[1] * b1[1] + b0[2] * b1[2]);

  delta = b * b - 4 * c;

  res = -1;

  if (delta > 0) {
    // sqd = sqrt{>=160}(delta);
    sqd = exp(log{>=160}(delta) / 2);

    t1 = (-b + sqd) / 2;
    t2 = (-b - sqd) / 2;

    if (t1 > 0) {
      if (t2 > 0) {
        if (t1 > t2) { res = t2; }
        else { res = t1; }
      } else { skip; }
    } else { skip; }
  } else { skip; }

  return res;
}